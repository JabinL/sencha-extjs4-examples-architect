/*
 * File: app/view/GridPanelToolbar.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Sencha.view.GridPanelToolbar', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.grid4',

    frame: true,
    height: 300,
    width: 600,
    animCollapse: false,
    collapsible: true,
    iconCls: 'icon-grid',
    title: 'Support for standard Panel features such as framing, buttons and toolbars',
    columnLines: true,
    store: 'Companies',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'company',
                    flex: 1,
                    text: 'Company'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return Ext.util.Format.usMoney(value);
                    },
                    dataIndex: 'price',
                    text: 'Price'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'change',
                    text: 'Change'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'pctChange',
                    text: '% Change'
                },
                {
                    xtype: 'datecolumn',
                    dataIndex: 'lastChange',
                    text: 'Last Updated',
                    format: 'm/d/Y'
                }
            ],
            viewConfig: {

            },
            selModel: Ext.create('Ext.selection.CheckboxModel', {

            }),
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    ui: 'footer',
                    layout: {
                        pack: 'center',
                        type: 'hbox'
                    },
                    items: [
                        {
                            xtype: 'button',
                            minWidth: 80,
                            text: 'Save'
                        },
                        {
                            xtype: 'button',
                            minWidth: 80,
                            text: 'Cancel'
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'add',
                            text: 'Add Something',
                            tooltip: 'Add a new row'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            iconCls: 'option',
                            text: 'Options',
                            tooltip: 'Set options'
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'removeButton',
                            iconCls: 'remove',
                            text: 'Remove Something',
                            tooltip: 'Remove the selected item'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});